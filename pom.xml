<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.glowroot.zipkin</groupId>
  <artifactId>zipkin-agent</artifactId>
  <version>0.1-SNAPSHOT</version>

  <name>Zipkin Agent</name>
  <description>Zipkin Agent</description>

  <dependencies>
    <dependency>
      <groupId>io.zipkin.zipkin2</groupId>
      <artifactId>zipkin</artifactId>
      <version>2.12.7</version>
    </dependency>
    <dependency>
      <groupId>io.zipkin.reporter2</groupId>
      <artifactId>zipkin-reporter</artifactId>
      <version>2.8.2</version>
    </dependency>
    <dependency>
      <groupId>io.zipkin.reporter2</groupId>
      <artifactId>zipkin-sender-okhttp3</artifactId>
      <version>2.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-instrumentation-api</artifactId>
      <version>0.13.4-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-engine</artifactId>
      <version>0.13.4-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.glowroot.instrumentation</groupId>
      <artifactId>glowroot-instrumentation-all</artifactId>
      <version>0.13.4-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <!-- junit 5+ requires Java 8+ -->
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <!-- assertj 2.0.0+ requires Java 7+ -->
      <version>1.7.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.1</version>
        <configuration>
          <dependencyReducedPomLocation>
            ${project.build.directory}/dependency-reduced-pom.xml
          </dependencyReducedPomLocation>
          <createSourcesJar>true</createSourcesJar>
          <shadeSourcesContent>true</shadeSourcesContent>
          <artifactSet>
            <excludes>
              <exclude>org.glowroot.build:glowroot-build-checker-jdk6</exclude>
            </excludes>
          </artifactSet>
          <transformers>
            <transformer
              implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <manifestEntries>
                <Premain-Class>org.glowroot.zipkin.Premain</Premain-Class>
                <Can-Redefine-Classes>true</Can-Redefine-Classes>
                <Can-Retransform-Classes>true</Can-Retransform-Classes>
              </manifestEntries>
            </transformer>
          </transformers>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/maven/**</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.squareup.okhttp3:okhttp</artifact>
              <excludes>
                <exclude>META-INF/proguard/**</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.google.guava:guava</artifact>
              <excludes>
                <exclude>META-INF/beans.xml</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>ch.qos.logback:logback-classic</artifact>
              <excludes>
                <exclude>META-INF/services/javax.servlet.ServletContainerInitializer</exclude>
              </excludes>
            </filter>
          </filters>
          <relocations>
            <relocation>
              <pattern>zipkin2</pattern>
              <shadedPattern>org.glowroot.zipkin.shaded.zipkin2</shadedPattern>
            </relocation>
            <relocation>
              <pattern>okhttp3</pattern>
              <shadedPattern>org.glowroot.zipkin.shaded.okhttp3</shadedPattern>
            </relocation>
            <relocation>
              <pattern>okio</pattern>
              <shadedPattern>org.glowroot.zipkin.shaded.okio</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.objectweb.asm</pattern>
              <shadedPattern>org.glowroot.zipkin.shaded.org.objectweb.asm</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.google</pattern>
              <shadedPattern>org.glowroot.zipkin.shaded.com.google</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.slf4j</pattern>
              <shadedPattern>org.glowroot.zipkin.shaded.org.slf4j</shadedPattern>
            </relocation>
            <relocation>
              <!-- this shades guava's internal use of java util logging which is needed to prevent
                java util logging from being initialized early (e.g. in the case of wildfly which
                wants to do some setup before jul is initialized) -->
              <pattern>java.util.logging</pattern>
              <shadedPattern>org.glowroot.engine.jul</shadedPattern>
              <excludes>
                <!-- don't shade the system property key "java.util.logging.manager" (unshaded
                  string is needed in LazyPlatformMBeanServer) -->
                <exclude>java.util.logging.manager</exclude>
              </excludes>
            </relocation>
            <relocation>
              <pattern>ch.qos.logback</pattern>
              <shadedPattern>org.glowroot.zipkin.shaded.ch.qos.logback</shadedPattern>
            </relocation>
            <relocation>
              <!-- logback internal constant, see
                ch.qos.logback.classic.util.ContextInitializer -->
              <rawString>true</rawString>
              <pattern>^logback.configurationFile$</pattern>
              <shadedPattern>glowroot.logback.configurationFile</shadedPattern>
            </relocation>
            <relocation>
              <!-- shades logback internal constant, see
                ch.qos.logback.classic.util.ContextInitializer -->
              <rawString>true</rawString>
              <pattern>^logback.groovy$</pattern>
              <shadedPattern>glowroot.logback.groovy</shadedPattern>
            </relocation>
            <relocation>
              <!-- logback internal constant, see ch.qos.logback.classic.ClassicConstants -->
              <rawString>true</rawString>
              <pattern>^logback(-test)?.xml$</pattern>
              <shadedPattern>glowroot.logback$1.xml</shadedPattern>
            </relocation>
            <relocation>
              <!-- logback internal constant, see ch.qos.logback.classic.ClassicConstants -->
              <rawString>true</rawString>
              <pattern>^logback.ContextSelector$</pattern>
              <shadedPattern>glowroot.logback.ContextSelector</shadedPattern>
            </relocation>
            <relocation>
              <!-- logback internal constant, see ch.qos.logback.classic.ClassicConstants -->
              <rawString>true</rawString>
              <pattern>^java:comp/env/logback/configuration-resource$</pattern>
              <shadedPattern>java:comp/env/glowroot.logback/configuration-resource</shadedPattern>
            </relocation>
            <relocation>
              <!-- logback internal constant, see ch.qos.logback.classic.ClassicConstants -->
              <rawString>true</rawString>
              <pattern>^java:comp/env/logback/context-name$</pattern>
              <shadedPattern>java:comp/env/glowroot.logback/context-name</shadedPattern>
            </relocation>
          </relocations>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
        <version>2.0.14</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>proguard</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includeDependency>false</includeDependency>
          <obfuscate>false</obfuscate>
          <options>
            <option>-dontoptimize</option>
            <option>-dontnote **</option>
            <option>-dontwarn **</option>
            <option>
              -keep class !org.glowroot.zipkin.shaded.** { *; }
            </option>
            <!-- keep all logback appenders -->
            <option>
              -keep class * extends org.glowroot.zipkin.shaded.ch.qos.logback.** { *; }
            </option>
            <!-- keep special enumeration methods (see "Processing enumeration classes" section at
              http://proguard.sourceforge.net/manual/examples.html) -->
            <option>
              -keepclassmembers,allowoptimization enum * {
              public static **[] values();
              public
              static ** valueOf(java.lang.String);
              }
            </option>
          </options>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.proguard</groupId>
            <artifactId>proguard-base</artifactId>
            <version>6.0.3</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>auto-activated-java-9</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.github.wvengen</groupId>
              <artifactId>proguard-maven-plugin</artifactId>
              <configuration>
                <libs>
                  <lib>${java.home}/jmods/java.base.jmod</lib>
                  <!-- java.sql.jmod is needed for glowroot-agent-embedded -->
                  <lib>${java.home}/jmods/java.sql.jmod</lib>
                </libs>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>auto-activated-not-apple-jdk</id>
      <activation>
        <file>
          <exists>${java.home}/lib/rt.jar</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.github.wvengen</groupId>
              <artifactId>proguard-maven-plugin</artifactId>
              <configuration>
                <libs>
                  <lib>${java.home}/lib/rt.jar</lib>
                </libs>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>auto-activated-apple-jdk</id>
      <activation>
        <file>
          <exists>${java.home}/../Classes/classes.jar</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.github.wvengen</groupId>
              <artifactId>proguard-maven-plugin</artifactId>
              <configuration>
                <libs>
                  <lib>${java.home}/../Classes/classes.jar</lib>
                </libs>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
